

@startuml
'class Juego
Enave --> Jugador
enum Enave{
    AEGIS
    SWIFT
}
Juego <-- Eplaneta
enum Eplaneta{
    HOSTIL
    NEUTRAL
}
Arma <-- EArma
enum EArma{
   CAÑON_DE_IONES
   LASER_DE_FUSION
   MISIL_DE_ANTIMATERIA
   CAÑON_DE_PARTICULAS
   CAÑON_GAUSS
}
Juego "1" *-- "n" Planeta
Juego "1" *-- "1" Jugador
class Juego {
    - listaPlanetas: Lista Planeta
    - turno: int
    - jugador: Jugador
    --
    + Juego(jugador Jugador)
    --
    + elegirNave():Nave
    + siguienteTurno():Void
    + FinJuego(): Void
    --
    + crearPlanetaNeutral(nombre String): Planeta
    + crearPlanetaHostil(nombre String): Planeta
    + getPlanetaNeutral()
    + getPlanetaHostil()
}
Jugador "1" *-- "1" Nave
'class Jugador
class Jugador {
    - nave: Nave
    - nombre: string
    - uadeCoins: double  ' Cantidad de Uadecoins del jugador

    + Jugador(nombre String,uadeCoins double)
    + visitarPlanetaNeutral(planeta Planeta) : void
    + visitarPlanetaHostil(planeta Planeta) : void
    + setNave(): Nave
    + getNave(): Nave
}

'class Nave
abstract class Nave {
    - vida: double
    - velocidad: double
    - escudo: Escudo
    + Nave()
    + PoderAtaque(): double

}
abstract class NaveAliada extends Nave{
 - combustible: double
 - arma: Arma
 + removeArma(): Arma
 + setArma(): Arma
 + {abstract} calcularDaño(): double
}
' Clase para Nave Aegis
class NaveAegis extends NaveAliada{
+ calcularDaño(): double
}
' Clase para Nave Swift
class NaveSwift extends NaveAliada {
+ calcularDaño(): double
}
Nave "1"*--"n" Item
abstract class Item{
- precio: double

}
'class Arma
class Arma extends Item{
    - tipo : String
    - poder: double
    + Arma()

}

'class Escudo
class Escudo extends Item {
    - proteccion: double
    + Escudo(proteccion: double)
}
Hostil "1"*--"1" NavePirata
'class Enemigo
class NavePirata extends Nave {
    + calcularRecompensa(): double
}

'class Planeta

Neutral "1"*--"1" Mercado
abstract class Planeta {
    - nombre: String
    - tipo : Eplaneta
    + Planeta (nombre String, tipo EPlaneta)
}

'class Mercado
class Neutral extends Planeta{
    + Neutral()
    + AccionDeMercado(jugador Jugador):void
}
Mercado "1" o-- "n" Item
Abstract class Mercado {
    -Armas: EArma
    -uadecoins:double
}
class Venta extends Mercado{
    + Venta()
    + venderArma()
}
class Compra extends Mercado{
    + comprarCombustible()
    + comprarEscudo()
    + comprarArma()
}

' Subclase de Planeta: Hostil
class Hostil extends Planeta{
    - tesoro : boolean
    - naveEnemiga: navePirata
    + Hostil(naveEnemiga NavePirata)
    + combate(nave: Nave):void
}


@enduml