

@startuml

'class Juego
Juego -- Planeta
Juego "1" o-- "1" Jugador

Jugador "1" o-- "*" Nave
enum Enave{
    Aegis
    Swift
}
Juego -- Eplaneta
enum Eplaneta{
    Hostil
    Neutral
}
Arma -- EArma
enum EArma{
   ca単onDeIones,
   laserDeFusion,
   misilDeAntimateria,
   ca単onDeParticulas,
   ca単onGauss,
}
class Juego {
    - listaPlanetas: Lista Planeta
    - turno: int
    - jugador: Jugador
    --
    + Juego(jugador Jugador)
    --
    + elegirNave():Nave
    + siguienteTurno():Void
    + FinJuego(): Void
    --
    + crearPlanetaNeutral(nombre String): Planeta
    + crearPlanetaHostil(nombre String): Planeta
    + getPlanetaNeutral()
    + getPlanetaHostil()
}
Enave -- Jugador
'class Jugador
class Jugador {
    - nave: Nave
    - nombre: string
    - uadeCoins: double  ' Cantidad de Uadecoins del jugador

    + Jugador(nombre String,uadeCoins double)
    + visitarPlanetaNeutral(planeta Planeta) : void
    + visitarPlanetaHostil(planeta Planeta) : void
    + setNave(): Nave
    + getNave(): Nave
}

'class Nave

abstract class Nave {
    - vida: double
    - velocidad: double
    - combustible: double
    - escudo: Escudo
    - arma: Arma
    + PoderAtaque(): double
    + removeArma(): Arma
    + setArma(): Arma
    + calcularDa単o(): double
}
Item -- Nave
abstract class Item{
- precio: double

}
'class Arma
class Arma extends Item{
    - tipo : String
    - poder: double
    + Arma()

}

'class Escudo
class Escudo extends Item {
    - proteccion: double
    + Escudo(proteccion: double)
}
' Clase para Nave Aegis
class NaveAegis extends Nave{
    + isResistente(): boolean
}

' Clase para Nave Swift
class NaveSwift extends Nave {
    + isEvitable(): boolean
}
'class Enemigo
class NavePirata extends Nave {

    + NavePirata()
    + calcularRecompensa(): double
}

'class Planeta

Hostil -- NavePirata
Neutral -- Mercado

abstract class Planeta {
    - nombre: String
    - tipo : Eplaneta
    + Planeta (nombre String, tipo bolean)
}

'class Mercado
class Neutral extends Planeta{
    + Neutral()
    + AccionDeMercado(jugador Jugador):void
}
Mercado -- Item
Abstract class Mercado {
    -uadecoins:double
}
class Venta extends Mercado{
    + Venta()
    + venderArma()
}
class Compra extends Mercado{
    Armas: EArma
    + comprarCombustible()
    + comprarEscudo()
    + comprarArma()
}

' Subclase de Planeta: Hostil
class Hostil extends Planeta{
    - tesoro : boolean
    - naveEnemiga: navePirata
    + Hostil(naveEnemiga NavePirata)
    + combate(nave: Nave):void
}


@enduml